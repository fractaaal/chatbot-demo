{"version":3,"sources":["dataset.js","components/AnswersList.jsx","components/Answer.jsx","assets/img/no-profile.png","assets/img/favi-cafe.png","components/Chat.jsx","components/Chats.jsx","components/Forms/TextInput.jsx","components/Forms/FormDialog.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["defaultDataset","answers","content","nextId","question","AnswersList","props","className","map","value","index","select","toString","useStyles","makeStyles","createStyles","borderColor","color","fontWeight","marginBottom","backgroundColor","Answer","classes","Button","button","variant","onClick","Chat","isQuestion","type","ListItem","ListItemAvatar","Avatar","alt","src","Cafe","NoProfile","text","theme","height","padding","overflow","Chats","List","chats","id","chat","TextInput","TextField","fullWidth","label","margin","multiline","rows","onChange","FormDialog","inputName","event","setState","name","target","inputEmail","email","inputDescription","description","submitForm","payload","state","fetch","process","method","body","JSON","stringify","then","alert","handleClose","bind","Dialog","open","this","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","autoFocus","React","Component","App","displayNextQuestion","nextQuestionId","push","dataset","currentId","selectAnswer","selectedAnswer","test","a","document","createElement","href","click","handleClickOpen","setTimeout","scrollArea","getElementById","scrollTop","scrollHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yPA+CeA,G,MA/CQ,CACnB,KAAQ,CACJC,QAAS,CACL,CAACC,QAAS,+DAAcC,OAAQ,WAChC,CAACD,QAAS,6CAAWC,OAAQ,WAC7B,CAACD,QAAS,mDAAYC,OAAQ,aAC9B,CAACD,QAAS,uCAAUC,OAAQ,YAEhCC,SAAU,oLAEd,QAAW,CACPH,QAAS,CACL,CAACC,QAAS,qEAAeC,OAAQ,aACjC,CAACD,QAAS,qEAAeC,OAAQ,gCACjC,CAACD,QAAS,iFAAiBC,OAAQ,8CACnC,CAACD,QAAS,mDAAYC,OAAQ,SAElCC,SAAU,ofAGd,UAAa,CACTH,QAAS,CACL,CAACC,QAAS,qEAAeC,OAAQ,gCACjC,CAACD,QAAS,kDAAgBC,OAAQ,iCAClC,CAACD,QAAS,mDAAYC,OAAQ,SAElCC,SAAU,uPAEd,QAAW,CACPH,QAAS,CACL,CAACC,QAAS,uCAAUC,OAAQ,WAC5B,CAACD,QAAS,yDAAaC,OAAQ,WAC/B,CAACD,QAAS,mDAAYC,OAAQ,SAElCC,SAAU,wRAEd,UAAa,CACTH,QAAS,CACL,CAACC,QAAS,uCAAUC,OAAQ,WAC5B,CAACD,QAAS,qEAAeC,OAAQ,aACjC,CAACD,QAAS,qEAAeC,OAAQ,gCACjC,CAACD,QAAS,mDAAYC,OAAQ,SAElCC,SAAU,2Q,OC9BHC,EAVK,SAACC,GACjB,OACI,qBAAKC,UAAU,iBAAf,SACKD,EAAML,QAAQO,KAAI,SAACC,EAAOC,GACvB,OAAO,cAAC,EAAD,CAAQR,QAASO,EAAMP,QAASC,OAAQM,EAAMN,OAA+BQ,OAAQL,EAAMK,QAAhCD,EAAME,kB,2BCHlFC,EAAYC,aAAW,kBACzBC,YAAa,CACT,OAAS,CACLC,YAAa,UACbC,MAAO,UACPC,WAAY,IACZC,aAAc,MACd,UAAU,CACNC,gBAAiB,UACjBH,MAAO,cAoBRI,EAdA,SAACf,GACZ,IAAMgB,EAAUT,IAEhB,OACI,cAACU,EAAA,EAAD,CACIhB,UAAWe,EAAQE,OACnBC,QAAQ,WAAWC,QAAW,WAAOpB,EAAMK,OAAOL,EAAMJ,QAASI,EAAMH,SAF3E,SAIKG,EAAMJ,W,2BC3BJ,MAA0B,uCCA1B,MAA0B,sCC8B1ByB,EAtBF,SAACrB,GACV,IAAMsB,EAA6B,aAAftB,EAAMuB,KACpBP,EAAUM,EAAY,cAAc,kBAE1C,OACI,eAACE,EAAA,EAAD,CAAUvB,UAAWe,EAArB,UACI,cAACS,EAAA,EAAD,UACKH,EACG,cAACI,EAAA,EAAD,CAAQC,IAAI,OAAOC,IAAKC,IAExB,cAACH,EAAA,EAAD,CAAQC,IAAI,OAAOC,IAAKE,MAGhC,qBAAK7B,UAAU,iBAAf,SACKD,EAAM+B,W,SChBjBxB,EAAYC,aAAW,SAACwB,GAAD,OACzBvB,YAAa,CACT,MAAQ,CACJwB,OAAQ,IACRC,QAAS,IACTC,SAAU,aAmBPC,EAbD,SAACpC,GACX,IAAMgB,EAAUT,IAEhB,OACI,cAAC8B,EAAA,EAAD,CAAMpC,UAAWe,EAAQsB,MAAOC,GAAI,cAApC,SACKvC,EAAMsC,MAAMpC,KAAI,SAACsC,EAAMpC,GACpB,OAAO,cAAC,EAAD,CAAM2B,KAAMS,EAAKT,KAAMR,KAAMiB,EAAKjB,MAAWnB,EAAME,kB,6CCL3DmC,EAfG,SAACzC,GACf,OACI,cAAC0C,EAAA,EAAD,CACIC,WAAW,EACXC,MAAO5C,EAAM4C,MACbC,OAAQ,QACRC,WAAW,EACXC,KAAM/C,EAAM+C,KACZ5C,MAAOH,EAAMG,MACboB,KAAMvB,EAAMuB,KACZyB,SAAUhD,EAAMgD,YCJPC,E,kDACjB,WAAYjD,GAAO,IAAD,8BACd,cAAMA,IAWVkD,UAAY,SAACC,GACT,EAAKC,SAAS,CAACC,KAAMF,EAAMG,OAAOnD,SAbpB,EAelBoD,WAAa,SAACJ,GACV,EAAKC,SAAS,CAACI,MAAOL,EAAMG,OAAOnD,SAhBrB,EAkBlBsD,iBAAmB,SAACN,GAChB,EAAKC,SAAS,CAACM,YAAaP,EAAMG,OAAOnD,SAnB3B,EAsBlBwD,WAAa,WACT,IAIMC,EAAU,CACZ7B,KAAM,qGALG,EAAK8B,MAAMR,KAKd,WAJI,EAAKQ,MAAML,MAIf,wDAHU,EAAKK,MAAMH,aAW/BI,MAFYC,oFAED,CACPC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,KACtBQ,MAAK,WAOJ,OANAC,MAAM,8IACN,EAAKjB,SAAS,CACVC,KAAM,GACNG,MAAO,GACPE,YAAa,KAEV,EAAK1D,MAAMsE,kBA5CtB,EAAKT,MAAQ,CACTR,KAAM,GACNG,MAAO,GACPE,YAAa,IAEjB,EAAKR,UAAY,EAAKA,UAAUqB,KAAf,gBACjB,EAAKhB,WAAa,EAAKA,WAAWgB,KAAhB,gBAClB,EAAKd,iBAAmB,EAAKA,iBAAiBc,KAAtB,gBATV,E,0CAkDlB,WACI,OACI,eAACC,EAAA,EAAD,CACIC,KAAMC,KAAK1E,MAAMyE,KACjBE,QAASD,KAAK1E,MAAMsE,YACpBM,kBAAgB,qBAChBC,mBAAiB,2BAJrB,UAMI,cAACC,EAAA,EAAD,CAAavC,GAAG,qBAAhB,oEACA,eAACwC,EAAA,EAAD,WACI,cAAC,EAAD,CACInC,MAAO,mCAAWE,WAAW,EAAOC,KAAM,EAC1C5C,MAAOuE,KAAKb,MAAMR,KAAM9B,KAAM,OAAQyB,SAAU0B,KAAKxB,YAEzD,cAAC,EAAD,CACIN,MAAO,2DAAeE,WAAW,EAAOC,KAAM,EAC9C5C,MAAOuE,KAAKb,MAAML,MAAOjC,KAAM,QAASyB,SAAU0B,KAAKnB,aAE3D,cAAC,EAAD,CACIX,MAAO,2DAAeE,WAAW,EAAMC,KAAM,EAC7C5C,MAAOuE,KAAKb,MAAMH,YAAanC,KAAM,OAAQyB,SAAU0B,KAAKjB,sBAGpE,eAACuB,EAAA,EAAD,WACE,cAAC/D,EAAA,EAAD,CAAQG,QAASsD,KAAK1E,MAAMsE,YAAa3D,MAAM,UAA/C,4CAGA,cAACM,EAAA,EAAD,CAAQG,QAASsD,KAAKf,WAAYhD,MAAM,UAAUsE,WAAS,EAA3D,gD,GA9EsBC,IAAMC,WC4F/BC,E,kDA7Fb,WAAYpF,GAAO,IAAD,8BAChB,cAAMA,IAaRqF,oBAAsB,SAACC,GACrB,IAAMhD,EAAQ,EAAKuB,MAAMvB,MACzBA,EAAMiD,KAAK,CACTxD,KAAM,EAAK8B,MAAM2B,QAAQF,GAAgBxF,SACzCyB,KAAM,aAGR,EAAK6B,SAAS,CACZzD,QAAS,EAAKkE,MAAM2B,QAAQF,GAAgB3F,QAC5C2C,MAAOA,EACPmD,UAAWH,KAxBG,EA4BlBI,aAAe,SAACC,EAAgBL,GAC9B,QAAO,GACL,IAAwB,SAAnBA,EACH,EAAKD,oBAAoBC,GACzB,MACF,IAAK,WAAWM,KAAKN,GACnB,IAAMO,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAOV,EACTO,EAAEvC,OAAS,SACXuC,EAAEI,QACF,MACF,IAAwB,YAAnBX,EACH,EAAKY,kBACL,MACF,QACE,IAAM5D,EAAQ,EAAKuB,MAAMvB,MACzBA,EAAMiD,KAAK,CACTxD,KAAM4D,EACNpE,KAAM,WAGR,EAAK6B,SAAS,CACZd,MAAOA,IAGT6D,YAAW,WAAO,EAAKd,oBAAoBC,KAAkB,OArDjD,EA0DlBY,gBAAkB,WAChB,EAAK9C,SAAS,CAACqB,MAAK,KA3DJ,EA8DlBH,YAAc,WACZ,EAAKlB,SAAS,CAACqB,MAAK,KA7DpB,EAAKZ,MAAQ,CACXlE,QAAS,GACT2C,MAAO,GACPmD,UAAW,OACXD,QAAS9F,EACT+E,MAAM,GAER,EAAKiB,aAAe,EAAKA,aAAanB,KAAlB,gBACpB,EAAK2B,gBAAkB,EAAKA,gBAAgB3B,KAArB,gBACvB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBAXH,E,qDAmElB,WAEEG,KAAKgB,aADc,GACWhB,KAAKb,MAAM4B,a,gCAG3C,WACE,IAAMW,EAAaN,SAASO,eAAe,eACvCD,IACFA,EAAWE,UAAYF,EAAWG,gB,oBAItC,WACE,OACE,yBAAStG,UAAU,YAAnB,SACE,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,CAAOqC,MAAOoC,KAAKb,MAAMvB,QACzB,cAAC,EAAD,CAAa3C,QAAS+E,KAAKb,MAAMlE,QAASU,OAAQqE,KAAKgB,eACvD,cAAC,EAAD,CAAYjB,KAAMC,KAAKb,MAAMY,KAAMH,YAAaI,KAAKJ,uB,GAtF7CY,IAAMC,WCKTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASO,eAAe,SAM1BG,M","file":"static/js/main.fecb48e3.chunk.js","sourcesContent":["const defaultDataset = {\n    \"init\": {\n        answers: [\n            {content: \"なにをやっている人？\", nextId: \"profile\"},\n            {content: \"スカウトしたい\", nextId: \"recruit\"},\n            {content: \"仕事を依頼したい\", nextId: \"job_offer\"},\n            {content: \"問い合わせる\", nextId: \"contact\"},\n        ],\n        question: \"こんにちは！松井壮太と申します😄\\n\" + \"ご用件はなんでしょうか？\",\n    },\n    \"profile\": {\n        answers: [\n            {content: \"スキルセットを知りたい\", nextId: \"skill_set\"},\n            {content: \"ポートフォリオを見たい\", nextId: \"https://github.com/fractaaal\"},\n            {content: \"さらに詳しく経歴を知りたい\", nextId: \"https://www.wantedly.com/id/souta_matsui_a\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"},\n        ],\n        question: \"26才でエンジニアを目指しているものです。元メーカーで働いていましたが、エンジニアを目指すために退職しました。\\n\" +\n                  \"自走力や論理的思考力などが強みです。現在は就職活動中です。\",\n    },\n    \"skill_set\": {\n        answers: [\n            {content: \"ポートフォリオを見たい\", nextId: \"https://github.com/fractaaal\"},\n            {content: \"Qiitaの投稿を見たい\", nextId: \"https://qiita.com/Sota_Matsui\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"HTML&CSS、JavaScript、React、Rails、Pythonなどです。\\n現在TypeScriptを学習中です。Qiitaなどにも記事を投稿しています\",\n    },\n    \"recruit\": {\n        answers: [\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"どんな人か知りたい\", nextId: \"profile\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"現在就職活動中です。ご興味をもって頂きありがとうございます。こちらからお問い合わせください。\",\n    },\n    \"job_offer\": {\n        answers: [\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"スキルセットを知りたい\", nextId: \"skill_set\"},\n            {content: \"ポートフォリオを見たい\", nextId: \"https://github.com/fractaaal\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"業務未経験ですが静的Webサイト制作にチャレンジしたいと考えています。まずはご相談ください。\",\n    },\n}\n\nexport default defaultDataset","import React from 'react'\nimport {Answer} from './index'\n\nconst AnswersList = (props)=>{\n    return(\n        <div className='c-grid__answer'>\n            {props.answers.map((value, index) => {\n                return <Answer content={value.content} nextId={value.nextId} key={index.toString()} select={props.select}/>    \n            })}\n        </div>\n    )\n}\n\nexport default AnswersList","import React from 'react'\nimport { makeStyles, createStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => (\n    createStyles({\n        \"button\":{\n            borderColor: '#9944cc',\n            color: '#9944cc',\n            fontWeight: 600,\n            marginBottom: '8px',\n            \"&:hover\":{\n                backgroundColor: '#9944cc',\n                color: '#fff'\n            }\n        }\n    })\n));\n\nconst Answer = (props)=>{\n    const classes = useStyles();;\n\n    return(\n        <Button \n            className={classes.button}\n            variant=\"outlined\" onClick = {() => {props.select(props.content, props.nextId)}}\n        >\n            {props.content}\n        </Button>\n    )\n\n}\n\nexport default Answer","export default __webpack_public_path__ + \"static/media/no-profile.67b6df19.png\";","export default __webpack_public_path__ + \"static/media/favi-cafe.4a27aa7a.png\";","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport NoProfile from '../assets/img/no-profile.png'\nimport Cafe from '../assets/img/favi-cafe.png'\n\n\nconst Chat = (props) => {\n    const isQuestion = (props.type === 'question');\n    const classes = isQuestion? 'p-chat__row':'p-chat__reverse';\n\n    return(\n        <ListItem className={classes}>\n            <ListItemAvatar>\n                {isQuestion ?(\n                    <Avatar alt=\"icon\" src={Cafe} />\n                ) : (\n                    <Avatar alt=\"icon\" src={NoProfile} />\n                )}\n            </ListItemAvatar>\n            <div className='p-chat__bubble'>\n                {props.text}\n            </div>\n\n        </ListItem>\n    )\n\n}\n\nexport default Chat","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport {Chat} from './index';\n\n\nconst useStyles = makeStyles((theme) => (\n    createStyles({\n        \"chats\":{\n            height: 400,\n            padding: '0',\n            overflow: 'auto'\n        }\n    })\n));\n\n\nconst Chats = (props) => {\n    const classes = useStyles()\n\n    return(\n        <List className={classes.chats} id={'scroll-area'}>\n            {props.chats.map((chat, index) => {\n                return <Chat text={chat.text} type={chat.type} key={index.toString()}/>\n            })}\n        </List>\n    )\n\n}\n\nexport default Chats","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput = (props) => {\n    return(\n        <TextField \n            fullWidth={true}\n            label={props.label}\n            margin={'dense'}\n            multiline={true}\n            rows={props.rows}\n            value={props.value}\n            type={props.type}\n            onChange={props.onChange}\n        />\n    )\n}\n\nexport default TextInput","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextInput from './TextInput'\n\nexport default class FormDialog extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name: '',\n            email: '',\n            description: ''\n        }\n        this.inputName = this.inputName.bind(this)\n        this.inputEmail = this.inputEmail.bind(this)\n        this.inputDescription = this.inputDescription.bind(this)\n    }\n\n    inputName = (event) => {\n        this.setState({name: event.target.value})\n    }\n    inputEmail = (event) => {\n        this.setState({email: event.target.value})\n    }\n    inputDescription = (event) => {\n        this.setState({description: event.target.value})\n    }\n\n    submitForm = () => {\n        const name = this.state.name\n        const email = this.state.email\n        const description = this.state.description\n\n        const payload = {\n            text: 'お問い合わせがありました\\n' +\n                  'お名前：' + name + '\\n' +\n                  'Email:' + email +'\\n' +\n                  'お問い合わせ内容:\\n' + description\n        }\n\n        const url = process.env.REACT_APP_SLACK_URL\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then(() => {\n            alert('送信が完了しました。追ってご連絡差し上げます。')\n            this.setState({\n                name: '',\n                email: '',\n                description: ''\n            })\n            return this.props.handleClose()\n        })\n    }\n\n    render(){\n        return(\n            <Dialog\n                open={this.props.open}\n                onClose={this.props.handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">問い合わせフォーム</DialogTitle>\n                <DialogContent>                \n                    <TextInput\n                        label={'お名前(必須)'} multiline={false} rows={1}\n                        value={this.state.name} type={'text'} onChange={this.inputName} \n                    />\n                    <TextInput\n                        label={'メールアドレス(必須)'} multiline={false} rows={1}\n                        value={this.state.email} type={'email'} onChange={this.inputEmail} \n                    />\n                    <TextInput\n                        label={'問い合わせ内容(必須)'} multiline={true} rows={5}\n                        value={this.state.description} type={'text'} onChange={this.inputDescription} \n                    />\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={this.props.handleClose} color=\"primary\">\n                    キャンセル\n                  </Button>\n                  <Button onClick={this.submitForm} color=\"primary\" autoFocus>\n                    送信する\n                  </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}","import React from 'react';\nimport './assets/styles/style.css';\nimport defaultDataset from './dataset';\nimport {AnswersList, Chats} from './components/index';\nimport FormDialog from './components/Forms/FormDialog';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      answers: [],\n      chats: [],\n      currentId: \"init\",\n      dataset: defaultDataset,\n      open: false\n    }\n    this.selectAnswer = this.selectAnswer.bind(this)\n    this.handleClickOpen = this.handleClickOpen.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  displayNextQuestion = (nextQuestionId) => {\n    const chats = this.state.chats\n    chats.push({\n      text: this.state.dataset[nextQuestionId].question,\n      type: 'question'\n    })\n\n    this.setState({\n      answers: this.state.dataset[nextQuestionId].answers,\n      chats: chats,\n      currentId: nextQuestionId\n    })\n  }\n\n  selectAnswer = (selectedAnswer, nextQuestionId) => {\n    switch(true){\n      case(nextQuestionId === 'init'):\n        this.displayNextQuestion(nextQuestionId)\n        break;\n      case(/^https:*/.test(nextQuestionId)):\n        const a = document.createElement('a')\n        a.href = nextQuestionId\n        a.target = '_blank'\n        a.click()\n        break;\n      case(nextQuestionId === 'contact'):\n        this.handleClickOpen()\n        break;\n      default:\n        const chats = this.state.chats;\n        chats.push({\n          text: selectedAnswer,\n          type: 'answer'\n        })\n    \n        this.setState({\n          chats: chats\n        })\n\n        setTimeout(() => {this.displayNextQuestion(nextQuestionId)}, 500)\n        break;\n    }\n  }\n\n  handleClickOpen = () => {\n    this.setState({open:true});\n  };\n\n  handleClose = () => {\n    this.setState({open:false});\n  };\n\n\n  componentDidMount(){\n    const initAnswer = '';\n    this.selectAnswer(initAnswer, this.state.currentId)\n  }\n\n  componentDidUpdate(){\n    const scrollArea = document.getElementById('scroll-area')\n    if (scrollArea){\n      scrollArea.scrollTop = scrollArea.scrollHeight\n    }\n  }\n\n  render(){\n    return (\n      <section className='c-section'>\n        <div className='c-box'>\n          <Chats chats={this.state.chats}/>\n          <AnswersList answers={this.state.answers} select={this.selectAnswer} />\n          <FormDialog open={this.state.open} handleClose={this.handleClose}/>\n        </div>\n      </section>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}